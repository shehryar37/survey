@model SurveyProject.tblFaculty

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.FacultyID)

    <div class="card">
        <div class="header">
            <h2>Edit</h2>
        </div>
        <div class="body clearfix">
            <!-- Name -->
            <div class="form-group">
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                    <label>Name</label>
                </div>
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
                    <div class="form-line">
                        @Html.EditorFor(model => model.FacultyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacultyName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Email -->
            <div class="form-group">
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                    <label>Email</label>
                </div>
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
                    <div class="form-line">
                        @Html.EditorFor(model => model.FacultyEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacultyEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Specification -->
            <div class="form-group">
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                    <label>Specification</label>
                </div>
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">
                    <div class="form-line">
                        @Html.EditorFor(model => model.FacultySpecification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacultySpecification, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Gender -->
            <div class="form-group">
                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                    <label>Gender</label>
                </div>
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10">

                    @Html.RadioButtonFor(model => model.FacultyGender, "M", new { id = "rMale", @class = "with-gap radio-col-blue" })
                    <label for="rMale">Male</label>
                    @Html.RadioButtonFor(model => model.FacultyGender, "F", new { id = "rFemale", @class = "with-gap radio-col-blue" })
                    <label for="rFemale">Female</label>

                </div>
            </div>

            @Html.HiddenFor(model => model.FacultyJoiningDate)

            <div class="form-group">
                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-block bg-white col-black waves-effect" })
                </div>
                <div class="col-lg-2 col-md-4 col-sm-6 col-xs-12">
                    <input type="submit" value="Save" class="btn btn-block bg-blue waves-effect" />
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
